#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on Fri Mar 30 13:50:16 2018

@author: Okada
"""

import argparse
import sys
import os
import re
import glob

def main():

    parser = argparse.ArgumentParser(prog = "wordcount")
    parser.add_argument("--version", action = "version", version = "wordcount-v0.0.1")
    parser.add_argument("--input_file", help = "input text", type = str, default = "")
    parser.add_argument("--input_dir", help = "input text directory", type = str, default = "")
    parser.add_argument("--output_file", help = "output text", type = str, required=True)
    parser.add_argument("--rank", help = "output rank ", type = int, default = 100)
    
    args = parser.parse_args(sys.argv[1:])
    
    output_file = args.output_file
    if os.path.exists(os.path.dirname(output_file)) == False:
        os.makedirs(os.path.dirname(output_file))

    input_files = []
    if len(args.input_file) > 0:
        input_files += [args.input_file]
    if len(args.input_dir) > 0:
        input_files += glob.glob(args.input_dir.rstrip("/") + "/*")
    
    # read line and split word, next count up.
    p = re.compile(r'[^a-zA-Z0-9 ]')
    dic = {}
    for input_file in input_files:
        for l in open(input_file).readlines():
            words = p.sub("", l).split(" ")
            for word in words:
                word = word.lower()
                if word == "":
                    continue
                if word.isdigit():
                    continue
                
                if word in dic.keys():
                    dic[word] += 1
                else:
                    dic[word] = 1
    
    # choise Top N
    li = []
    vmax = max(dic.values())
    for key in sorted(dic.items(), key=lambda x: x[1], reverse=True):
        li.append((key[0], key[1], (vmax-key[1])))
        if len(li) >= args.rank:
            break
    
    # sort by count -> word
    li.sort(key=lambda x: [x[2], x[0]])
    fw = open(output_file, "w")
    for key in li:
        fw.write("%24s: %4d\n" % (key[0], key[1]))
    fw.close()
    
if __name__ == "__main__":
    main()
